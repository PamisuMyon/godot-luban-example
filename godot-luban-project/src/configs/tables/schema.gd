
#  <auto-generated>
#    This code was generated by a tool.
#    Changes to this file may cause incorrect behavior and will be lost if
#    the code is regenerated.
#  </auto-generated>


class_name Schema

enum ItemEQuality
{
	WHITE = 1,# 最差品质
	BLUE = 2,# 蓝色的
	PURPLE = 3,# 紫色的
	RED = 4,# 最高品质
}

enum TestAccessFlag
{
	WRITE = 1,
	READ = 2,
	TRUNCATE = 4,
	NEW = 8,
	READ_WRITE = WRITE|READ,# 位标记使用示例
}

# 道具类型
enum EExampleType
{
	Consumable = 1,# 消耗品
	Equipment = 2,# 装备
	Weapon = 3,# 武器
}

enum EAttributeType
{
	Heath = 1,# 生命
	MaxHealth = 2,# 最大生命
	Attack = 3,# 攻击
	Defense = 4,# 防御
	CriticalRate = 5,# 暴击率
	CriticalDamage = 6,# 暴击伤害
}

# 道具类型
enum EItemType
{
	Consumable = 1,# 消耗品
	Equipment = 2,# 装备
}


class ExampleBasic :
	var id: int
	var name: String
	var price: float
	var type: int
	var is_in_gacha: bool
	var some_long_value: int
	var some_double_value: float
	var some_vec3: Vector3

	func _init(_json_) -> void:
		self.id = _json_['id']
		self.name = _json_['name']
		self.price = _json_['price']
		self.type = _json_['type']
		self.is_in_gacha = _json_['is_in_gacha']
		self.some_long_value = _json_['some_long_value']
		self.some_double_value = _json_['some_double_value']
		self.some_vec3 = Vector3(_json_['some_vec3'])


class ExampleAdvance :
	var some_array_1: Array[int]
	var some_array_2: Array[float]
	var some_array_3: Array[String]
	var some_array_4: Array
	var some_map_1: Dictionary
	var some_bean_1: Reward
	var some_bean_2: Reward
	var some_bean_list: Array[Reward]

	func _init(_json_) -> void:
		self.some_array_1 = []
		for _ele in _json_['some_array_1']: var _e; _e = _ele; self.some_array_1.append(_e)
		self.some_array_2 = []
		for _ele in _json_['some_array_2']: var _e; _e = _ele; self.some_array_2.append(_e)
		self.some_array_3 = []
		for _ele in _json_['some_array_3']: var _e; _e = _ele; self.some_array_3.append(_e)
		self.some_array_4 = []
		for _ele in _json_['some_array_4']: var _e; _e = []
		for _ele in _ele: var _e; _e = _ele; _e.append(_e); self.some_array_4.append(_e)
		self.some_map_1 = {}
		for _e in _json_['some_map_1']: var _k; _k = _e[0]; var _v; _v = _e[1]; self.some_map_1[_k] = _v
		self.some_bean_1 = Reward.new(_json_['some_bean_1'])
		self.some_bean_2 = Reward.new(_json_['some_bean_2'])
		self.some_bean_list = []
		for _ele in _json_['some_bean_list']: var _e; _e = Reward.new(_ele); self.some_bean_list.append(_e)

class Reward :
	var item_id: int
	var count: int
	var description: String

	func _init(_json_) -> void:
		self.item_id = _json_['item_id']
		self.count = _json_['count']
		self.description = _json_['description']

class ExampleSingleton :
	var newbie_discount_times: int
	var affection_increment_limit: float
	var gift_cooldown: int

	func _init(_json_) -> void:
		self.newbie_discount_times = _json_['newbie_discount_times']
		self.affection_increment_limit = _json_['affection_increment_limit']
		self.gift_cooldown = _json_['gift_cooldown']


class ExamplesTbExampleBasic:
	var _data_list = []
	var _data_map = {}
	func _init(_json_ ) -> void:
		self._data_map = {}
		self._data_list = []
		
		for _json2_ in _json_:
			var _v
			_v = ExampleBasic.new(_json2_)
			self._data_list.append(_v)
			self._data_map[_v.id] = _v

	func get_data_map() -> Dictionary : return self._data_map
	func get_data_list() -> Array : return self._data_list

	func get_item(key) -> ExampleBasic : return self._data_map.get(key)

class ExamplesTbExampleAdvance:
	var _data_list = []
	func _init(_json_):
		self._data_list = []
		
		for _json2_ in _json_:
			var _v
			_v = ExampleAdvance.new(_json2_)
			self._data_list.append(_v)

	func get_data_list() -> Array : return self._data_list
	func get_item(index) -> ExampleAdvance : return self._data_list[index]

class ExamplesTbExampleSingleton:
	var _data: ExampleSingleton
	func _init(_json_):
		assert(len(_json_) == 1, "table mode=one, but size != 1")
		self._data = ExampleSingleton.new(_json_[0])

	func get_data() -> ExampleSingleton : return self._data

	# 新手商店优惠次数
	var newbie_discount_times: int:
		get: return self._data.newbie_discount_times
	# 单日好感度增加上限
	var affection_increment_limit: float:
		get: return self._data.affection_increment_limit
	# 礼物冷却时间
	var gift_cooldown: int:
		get: return self._data.gift_cooldown



class cfg_Tables:
	var TbExampleBasic: ExamplesTbExampleBasic 
	var TbExampleAdvance: ExamplesTbExampleAdvance 
	var TbExampleSingleton: ExamplesTbExampleSingleton 
	func _init(loader):
		self.TbExampleBasic = ExamplesTbExampleBasic.new(loader.call('examples_tbexamplebasic')); 
		self.TbExampleAdvance = ExamplesTbExampleAdvance.new(loader.call('examples_tbexampleadvance')); 
		self.TbExampleSingleton = ExamplesTbExampleSingleton.new(loader.call('examples_tbexamplesingleton')); 
		pass

