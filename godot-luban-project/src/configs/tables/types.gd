#  <auto-generated>
#    This code was generated by a tool.
#    Changes to this file may cause incorrect behavior and will be lost if
#    the code is regenerated.
#  </auto-generated>

class_name Types


# 道具类型
enum EExampleType{
	Consumable = 1, # 消耗品
	Equipment = 2, # 装备
	Weapon = 3, # 武器
}

enum EAttributeType{
	Health = 1, # 生命
	MaxHealth = 2, # 最大生命
	Attack = 3, # 攻击
	Defense = 4, # 防御
	CriticalRate = 5, # 暴击率
	CriticalDamage = 6, # 暴击伤害
}


# 道具类型
enum EItemType{
	Consumable = 1, # 消耗品
	Equipment = 2, # 装备
}

class ExamplesTbExampleBasic:
	var _data_map = {}
	var _data_list = []

	func _init(_json_) -> void:
		for _json2_ in _json_:
			var _v
			_v = ExamplesExampleBasic.new(_json2_)
			self._data_list.append(_v)
			self._data_map[_v.id] = _v

	func get_data_map() -> Dictionary:
		return self._data_map

	func get_data_list():
		return self._data_list

	func get_data(key) -> ExamplesExampleBasic: 
		return self._data_map.get(key)


class ExamplesExampleBasic:
	
	var id # 这是Id    类型：int
	var name # 名字    类型：string
	var grade # 等级    类型：int
	var star # 星级    类型：int
	var icon_res # 图标资源    类型：string
	var price # 价格    类型：float
	var type # 类型    类型：EExampleType
	var is_in_gacha # 是否可抽取    类型：bool
	var some_long_value # 这是一个long    类型：long
	var some_double_value # 这是一个double    类型：double
	var some_vec3 # 这是一个vector3    类型：vector3
	func _init(_json_) -> void:
		self.id = _json_['id']
		self.name = _json_['name']
		self.grade = _json_['grade']
		self.star = _json_['star']
		self.icon_res = _json_['icon_res']
		self.price = _json_['price']
		self.type = _json_['type']
		self.is_in_gacha = _json_['is_in_gacha']
		self.some_long_value = _json_['some_long_value']
		self.some_double_value = _json_['some_double_value']
		self.some_vec3 = Vector3(_json_['some_vec3']['x'], _json_['some_vec3']['y'], _json_['some_vec3']['z'])


class ExamplesTbExampleAdvance:
	var _data_list = []
	func _init(_json_) -> void:
		
		for _json2_ in _json_:
			var _v
			_v = ExamplesExampleAdvance.new(_json2_)
			self._data_list.append(_v)

	func get_data_list():
		return self._data_list

	func get_data(index) -> ExamplesExampleAdvance:
		return self._data_list[index]


class ExamplesExampleAdvance:
	
	var some_array_1 # 这是一个int数组,用逗号分隔    类型：(array#sep=,),int
	var some_array_2 # 这是一个float数组，用分号分隔    类型：(array#sep=;),float
	var some_array_3 # 这是一个string列表，用◆分隔    类型：(list#sep=◆),string
	var some_array_4 # 这是一个二维int数组    类型：(array#sep=|),(array#sep=,),int
	var some_map_1 # 这是一个键为string，值为float的字典    类型：(map#sep=,;),string,float
	var some_bean_1 # 道具Id    类型：Reward
	var some_bean_2 # 也可以这样写成一格    类型：Reward#sep=,
	var some_bean_list # 自定义类型列表    类型：(list#sep=|),Reward#sep=,
	func _init(_json_) -> void:
		self.some_array_1 = _json_['some_array_1']
		self.some_array_2 = _json_['some_array_2']
		self.some_array_3 = _json_['some_array_3']
		self.some_array_4 = _json_['some_array_4']
		self.some_map_1 = {}
		for _v in _json_['some_map_1']:
			self.some_map_1[_v[0]] =_v[1]
		self.some_bean_1 = Reward.new(_json_['some_bean_1'])
		self.some_bean_2 = Reward.new(_json_['some_bean_2'])
		self.some_bean_list = []
		for _ele in _json_['some_bean_list']:
			var _e = Reward.new(_ele);
			self.some_bean_list.append(_e)


class Reward:
	
	var item_id # 这是Id    类型：int
	var count # 数量    类型：int
	var description # 描述    类型：string
	func _init(_json_) -> void:
		self.item_id = _json_['item_id']
		self.count = _json_['count']
		self.description = _json_['description']


class ExamplesTbExampleSingleton:
	var _data: Dictionary
	func _init(_json_) -> void:
		assert(len(_json_) == 1, 'table mode=one, but size != 1')
		self._data = _json_[0]

	func get_data() -> Dictionary: 
		return self._data

	# 新手商店优惠次数
	func newbie_discount_times():
		return self._data.newbie_discount_times
	# 单日好感度增加上限
	func affection_increment_limit():
		return self._data.affection_increment_limit
	# 礼物冷却时间
	func gift_cooldown():
		return self._data.gift_cooldown


class ExamplesExampleSingleton:
	
	var newbie_discount_times # 新手商店优惠次数    类型：int
	var affection_increment_limit # 单日好感度增加上限    类型：float
	var gift_cooldown # 礼物冷却时间    类型：long
	func _init(_json_) -> void:
		self.newbie_discount_times = _json_['newbie_discount_times']
		self.affection_increment_limit = _json_['affection_increment_limit']
		self.gift_cooldown = _json_['gift_cooldown']


class ExamplesTbExampleList:
	var _data_list = []
	func _init(_json_) -> void:
		
		for _json2_ in _json_:
			var _v
			_v = ExamplesExampleList.new(_json2_)
			self._data_list.append(_v)

	func get_data_list():
		return self._data_list

	func get_data(index) -> ExamplesExampleList:
		return self._data_list[index]


class ExamplesExampleList:
	
	var name # 名字    类型：string
	var race # 种族    类型：string
	var occupation # 职业    类型：string
	var age # 年龄    类型：int
	var origin # 出身地    类型：string
	func _init(_json_) -> void:
		self.name = _json_['name']
		self.race = _json_['race']
		self.occupation = _json_['occupation']
		self.age = _json_['age']
		self.origin = _json_['origin']


class GameTbCharacterConfig:
	var _data_map = {}
	var _data_list = []

	func _init(_json_) -> void:
		for _json2_ in _json_:
			var _v
			_v = GameCharacterConfig.new(_json2_)
			self._data_list.append(_v)
			self._data_map[_v.id] = _v

	func get_data_map() -> Dictionary:
		return self._data_map

	func get_data_list():
		return self._data_list

	func get_data(key) -> GameCharacterConfig: 
		return self._data_map.get(key)


class GameCharacterConfig:
	
	var id # 角色id    类型：string
	var prefab_res # 预制体资源地址    类型：string
	var attack_pre_delay # 攻击前摇    类型：float
	var attack_post_delay # 攻击后摇    类型：float
	var die_duration # 死亡动画时长    类型：float
	var move_speed # 移动速度    类型：float
	func _init(_json_) -> void:
		self.id = _json_['id']
		self.prefab_res = _json_['prefab_res']
		self.attack_pre_delay = _json_['attack_pre_delay']
		self.attack_post_delay = _json_['attack_post_delay']
		self.die_duration = _json_['die_duration']
		self.move_speed = _json_['move_speed']


class GameTbPlayerInitialConfig:
	var _data_map = {}
	var _data_list = []

	func _init(_json_) -> void:
		for _json2_ in _json_:
			var _v
			_v = GamePlayerInitialConfig.new(_json2_)
			self._data_list.append(_v)
			self._data_map[_v.id] = _v

	func get_data_map() -> Dictionary:
		return self._data_map

	func get_data_list():
		return self._data_list

	func get_data(key) -> GamePlayerInitialConfig: 
		return self._data_map.get(key)


class GamePlayerInitialConfig:
	
	var id # 角色id    类型：string
	var max_health # 最大生命值    类型：float
	var attack # 攻击    类型：float
	func _init(_json_) -> void:
		self.id = _json_['id']
		self.max_health = _json_['max_health']
		self.attack = _json_['attack']


class GameTbMainLevelConfig:
	var _data_map = {}
	var _data_list = []

	func _init(_json_) -> void:
		for _json2_ in _json_:
			var _v
			_v = GameMainLevelConfig.new(_json2_)
			self._data_list.append(_v)
			self._data_map[_v.id] = _v

	func get_data_map() -> Dictionary:
		return self._data_map

	func get_data_list():
		return self._data_list

	func get_data(key) -> GameMainLevelConfig: 
		return self._data_map.get(key)


class GameMainLevelConfig:
	
	var id # 关卡id    类型：int
	var stage_res # 关卡资源地址    类型：string
	var enemy_id # 敌方角色id    类型：string
	var max_health # 敌方最大生命    类型：float
	var attack # 敌方攻击    类型：float
	func _init(_json_) -> void:
		self.id = _json_['id']
		self.stage_res = _json_['stage_res']
		self.enemy_id = _json_['enemy_id']
		self.max_health = _json_['max_health']
		self.attack = _json_['attack']


class GameTbGlobalConfig:
	var _data: Dictionary
	func _init(_json_) -> void:
		assert(len(_json_) == 1, 'table mode=one, but size != 1')
		self._data = _json_[0]

	func get_data() -> Dictionary: 
		return self._data

	# 默认玩家角色id
	func default_player_character():
		return self._data.default_player_character


class GameGlobalConfig:
	
	var default_player_character # 默认玩家角色id    类型：string
	func _init(_json_) -> void:
		self.default_player_character = _json_['default_player_character']


var TbExampleBasic: ExamplesTbExampleBasic
var TbExampleAdvance: ExamplesTbExampleAdvance
var TbExampleSingleton: ExamplesTbExampleSingleton
var TbExampleList: ExamplesTbExampleList
var TbCharacterConfig: GameTbCharacterConfig
var TbPlayerInitialConfig: GameTbPlayerInitialConfig
var TbMainLevelConfig: GameTbMainLevelConfig
var TbGlobalConfig: GameTbGlobalConfig

func _init(loader) -> void:
	self.TbExampleBasic = ExamplesTbExampleBasic.new(loader.load_file('examples_tbexamplebasic'))
	self.TbExampleAdvance = ExamplesTbExampleAdvance.new(loader.load_file('examples_tbexampleadvance'))
	self.TbExampleSingleton = ExamplesTbExampleSingleton.new(loader.load_file('examples_tbexamplesingleton'))
	self.TbExampleList = ExamplesTbExampleList.new(loader.load_file('examples_tbexamplelist'))
	self.TbCharacterConfig = GameTbCharacterConfig.new(loader.load_file('game_tbcharacterconfig'))
	self.TbPlayerInitialConfig = GameTbPlayerInitialConfig.new(loader.load_file('game_tbplayerinitialconfig'))
	self.TbMainLevelConfig = GameTbMainLevelConfig.new(loader.load_file('game_tbmainlevelconfig'))
	self.TbGlobalConfig = GameTbGlobalConfig.new(loader.load_file('game_tbglobalconfig'))
